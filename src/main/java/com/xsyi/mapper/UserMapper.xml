<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xsyi.dao.UserMapper">
	<resultMap id="BaseResultMap" type="user">
		<id column="userId" property="userid" jdbcType="VARCHAR" />
		<result column="userName" property="username" jdbcType="VARCHAR" />
		<result column="enName" property="enname" jdbcType="VARCHAR" />
		<result column="createTime" property="createtime" jdbcType="VARCHAR"/>
	</resultMap>
	<resultMap id="resultMap" type="user">
		<id column="userId" property="userid" jdbcType="VARCHAR" />
		<result column="userName" property="username" jdbcType="VARCHAR" />
		<result column="enName" property="enname" jdbcType="VARCHAR" />
		<result column="createTime" property="createtime" jdbcType="VARCHAR"/>
		<!-- 一对一映射,查询用户对应的角色信息 -->
		<association property="role" column="roleId" javaType="com.xsyi.model.Role" 
			select="com.xsyi.dao.RoleMapper.selectByPrimaryKey2">
		</association>
	</resultMap>
	<sql id="Base_Column_List">
		userId, userName, enName,createTime
	</sql>
	<!-- 自动生成主键 
		order 这可以被设置为 BEFORE 或 AFTER。如果设置为 BEFORE,那 么它会首先选择主键, 
			设置 keyProperty 然后执行插入语句。 如果 设置为 AFTER,
			那么先执行插入语句,然后是 selectKey 元素- 这和如 Oracle 数据库相似,可以在插入语句中嵌入序列调用。
	-->
	<!--  
	<insert id="tInsert" parameterType="">
		<selectKey  keyProperty="id" resultType="int" order="BEFORE">
			select xx.nextval() from dual	
		</selectKey>
		insert into 
	</insert>
	-->
	
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_user
		where userId = #{userid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from t_user
		where userId = #{userid,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="user">
		insert into t_user (userId, userName, enName
		)
		values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
		#{enname,jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="insert2User" parameterType="user">
		insert into t_user (userId, userName, enName
		)
		values (#{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
		#{enname,jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="insertSelective" parameterType="user">
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				userId,
			</if>
			<if test="username != null">
				userName,
			</if>
			<if test="enname != null">
				enName,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="enname != null">
				#{enname,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="user">
		update t_user
		<set>
			<if test="username != null">
				userName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="enname != null">
				enName = #{enname,jdbcType=VARCHAR},
			</if>
		</set>
		where userId = #{userid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="user">
		update t_user
		set userName = #{username,jdbcType=VARCHAR},
		enName = #{enname,jdbcType=VARCHAR}
		where userId = #{userid,jdbcType=VARCHAR}
	</update>
	
	<!-- 测试mybatis一对一查询:association-->
	<select id="selectUser" parameterType="java.util.Map" resultMap="resultMap">
		select userId,roleId, userName, enName,createTime
			from T_USER
			where userId = #{userid,jdbcType=VARCHAR}
	</select>
	
	
	
	
	
	
</mapper>