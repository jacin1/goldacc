<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"	
		xmlns:util="http://www.springframework.org/schema/util"	
		xmlns:jee="http://www.springframework.org/schema/jee" 
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:batch="http://www.springframework.org/schema/batch"
		xmlns:mongo="http://www.springframework.org/schema/data/mongo"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
				http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd				
				http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
				http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd 
				http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd">
		
	<description>mybatis公共配置文件</description>
    
	<!-- 对stereotype annotations标记的受管组件进行classpath扫描,自动注册bean-->
	<context:component-scan base-package="com.xsyi" />
	<!-- druid连接池管理 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${db.conn.draco.jdbc.url}" />
		<property name="username" value="${db.conn.draco.jdbc.user}" />
		<property name="password" value="${db.conn.draco.jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />
	
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
	
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
	
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
	
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
	
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		 <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
		
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:db/mybatis.xml" />
       	<property name="mapperLocations">
            <list>
                <value>classpath*:com/xsyi/mapper/**/*.xml</value>
            </list>
        </property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xsyi.dao" />
		<property name="annotationClass" value="org.springframework.stereotype.Repository" /> 
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- 事务配置 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource" />
	<aop:config proxy-target-class="true" expose-proxy="true">
		<aop:advisor pointcut="execution(* *..service..*.*(..))" advice-ref="txAdvice"/>
	</aop:config>	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="query*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="get*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="select*" read-only="true"  propagation="REQUIRED"/>
			<tx:method name="insert*" rollback-for="java.lang.Exception,java.lang.Error" propagation="REQUIRES_NEW"/>
			<tx:method name="update*" rollback-for="java.lang.Exception,java.lang.Error" propagation="REQUIRES_NEW"/>
			<tx:method name="delete*" rollback-for="java.lang.Exception,java.lang.Error" propagation="REQUIRES_NEW"/>
		</tx:attributes>
	</tx:advice>

</beans>